# Булевите променливи приемат 2 стойности - истина (True) или лъжа (False)
# Обърнете внимание, че ВИНАГИ се пишат с главна буква
a = True
b = False

# Подобно на езика C имаме и 3 оператора за работа с булевите променливи
# Отрицание (not), "и" (and), "или" (or)
a = not False # True
b = True and False # False
c = True or False # True

# Контролна структура if
# Синтаксис
# if <условие> :
#   <блок на if>
# else:
#   <блок на else>
# Ако <условие> се оценява до истина, то се изпълнява кода от блока на if, иначе се изпълнява този на else
# Важно! - всички редове от блока трябва да започват с еднаква табулация
# Прието е блокът да започва една табулация по-навътре от if-а

a = 4
if a > 1:
    print("a is bigger than 1")
else:
    print("a is very small :( ")

# Може да добавяме и допълнителни проверки, ако условието на if се окаже лъжа
# Това става с помощта на elif <условие>:
    
a = 1
if a > 1:
    print("a is bigger than 1")
elif a == 1: # elif идва от else if
    print("a is 1")
else:
    print("a is very small :(")

# while цикъл
# Синтаксис
# while <условие> :
#   <блок на while>
# Докато условието е истина се изпълнява блокът на while
    
a = 1
while a < 5:
    print(a)
    a = a + 1
# 1 2 3 4

# може да използваме break или continue, за да:
# спрем цикъла по-рано с break
# прескочим една итерация на цикъла с continue
    
a = 1
while a < 5:
    if a == 3:
        a = a + 1
        continue
    print(a, end=" ") # Слагам end=" ", за да не се принтира всичко на нови редове
    a = a + 1
# 1 2 4
print()

a = 1
while a < 5:
    if a == 3:
        break
    print(a, end=" ")
    a = a + 1
# 1 2
print()
    
# for цикъл
# В python се използва, за да се итерира през колекции
# Една колекция, която познаваме е string (елементите на string са символите в него)
# Синтаксис:
# for <променлива> in <колекция>:
#   <блок на for>
# След всяка итерация, <променлива> ще бъде последователен елемент от колекцията
    
for c in "Hello":
    print(c, end=" ")
# H e l l o
print()

# Функцията range(start, stop, step) ни връща колекция от числа
# Започват от start (по подразбиране е 0, параметърът не е задължителен)
# През разстояние step (по подразбиране е 1, параметърът не е задължителен)
# Завършват ПРЕДИ stop (параметърът е задължителен, няма стойност по подразбиране)
# Важно! - Това, че завършва преди stop, означава, че самото число stop, не се съдържа в колекцията
    
for x in range(5): # start и step са стойностите по подразбиране (0 и 1 съответно), stop е 5
    print(x, end=" ")
# 0 1 2 3 4
print()

for x in range(2, 5): # step е 1 по подразбиране, stop е 5, start e 2
    print(x, end=" ")
# 2 3 4
print()

for x in range(1, 10, 2): # stop е 10, start е 1, step е 2
    print(x, end=" ")
# 1 3 5 7 9
print()

# Можем да сложим else блок на while и for циклите
# Той ще се изпълни САМО, ако условието на цъкъла достигне лъжа
# Това означава, че ако прекратим цикъла с break или continue, то else няма да се изпълни

a = 1
while a < 5:
    print(a, end=" ")
    a = a + 1
else:
    print("The end")
# 1 2 3 4 The end
    
a = 1
while a < 5:
    if a == 3:
        break
    print(a, end=" ")
    a = a + 1
else:
    print("The end")
# 1 2